name: Build host reusable workflow

on:
  workflow_call:
    inputs:
      outputName:
        required: true
        type: string
      cacheName:
        required: true
        type: string
      setup-qemu:
        required: false
        type: boolean
        default: false
      extra-nix-config:
        required: false
        type: string
    secrets:
      CACHIX_AUTH_TOKEN:
        description: 'the cachix auth token'
        required: true
      CACHIX_ACTIVATE_TOKEN:
        required: true
    outputs:
      build:
        value: ${{ jobs.build.outputs.build }}

jobs:
  build:
    runs-on: ubuntu-latest
    name:  ⚠️ Build
    outputs: 
      build: ${{ steps.agent.outputs.build }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-nix-cachix.yml
        with:
          cacheName: ${{ inputs.cacheName }}
          setup-qemu: ${{ inputs.setup-qemu }}
          extra-nix-config: ${{ inputs.extra-nix-config }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: ⚠️  Build 
        id: agent
        run: | 
          out_path=$(nix build -L --print-out-paths --accept-flake-config .#hosts.${{ inputs.outputName }})
          echo "Built $out_path"
          echo "build=$out_path" >> $GITHUB_OUTPUT
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: 🚀 Deploy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-nix-cachix.yml
        with:
          cacheName: ${{ inputs.cacheName }}
          setup-qemu: ${{ inputs.setup-qemu }}
          extra-nix-config: ${{ inputs.extra-nix-config }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: 🚀 Deploy
        env: 
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          cat << EOF >> deploy.json
          {
            "agents": {
              "${{ inputs.outputName }}": "${{ needs.build.outputs.build }}"
            }
          }
          EOF
          cachix deploy activate deploy.json
