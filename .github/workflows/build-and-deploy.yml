name: "Build and Deploy"

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:  # allows manual triggering
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CACHE_NAME: homelab-yohan

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - run: echo "null"
    outputs:
      cacheName: ${{ env.CACHE_NAME }}

  ocr1:
    name: ocr1
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      hostname: ocr1
      cacheName: ${{ needs.prepare.outputs.cacheName }}
      setup-qemu: true
      extra-nix-config: "extra-platforms = aarch64-linux"

  rp:
    name: rp
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      hostname: rp
      cacheName: ${{ needs.prepare.outputs.cacheName }}
      setup-qemu: true
      extra-nix-config: "extra-platforms = aarch64-linux"


  tiny1:
    name: tiny1
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      hostname: tiny1
      cacheName: ${{ needs.prepare.outputs.cacheName }}

  tiny2:
    name: tiny2
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      hostname: tiny2
      cacheName: ${{ needs.prepare.outputs.cacheName }}

  deploy-aarch64:
    needs: [rp, ocr1, prepare]
    runs-on: ubuntu-latest
    name:   ðŸš€ Deploy / x86_64 (concurently)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-nix-cachix
        with:
          cacheName: ${{ needs.prepare.outputs.cacheName }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: ðŸš€ Deploy
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          cat << EOF >> deploy.json
          {
            "agents": {
              "ocr1": "${{ needs.ocr1.outputs.build }}",
              "rp": "${{ needs.rp.outputs.build }}",
            }
          }
          EOF
          cachix deploy activate deploy.json



  deploy-x86_64:
    needs: [tiny1, tiny2, prepare]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name:  ðŸš€ Deploy / x86_64 (incremental)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-nix-cachix
        with:
          cacheName: ${{ needs.prepare.outputs.cacheName }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: ðŸš€ Deploy (tiny1)
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          cat << EOF >> deploy.json
          {
            "agents": {
              "tiny1": "${{ needs.tiny1.outputs.build }}",
            }
          }
          EOF
          cachix deploy activate deploy.json
      - name: ðŸš€ Deploy (tiny2)
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          rm deploy.json
          cat << EOF >> deploy.json
          {
            "agents": {
              "tiny2": "${{ needs.tiny2.outputs.build }}",
            }
          }
          EOF
          cachix deploy activate deploy.json
