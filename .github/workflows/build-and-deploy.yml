name: "Build and Deploy"

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:  # allows manual triggering
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CACHE_NAME: homelab-yohan

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - run: echo "null"
    outputs:
      cacheName: ${{ env.CACHE_NAME }}

  build-aarch64:
    name: aarch64
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      outputName: aarch64
      cacheName: ${{ needs.prepare.outputs.cacheName }}
      setup-qemu: true
      extra-nix-config: "extra-platforms = aarch64-linux"

  deploy-aarch64:
    needs: [build-aarch64, prepare]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: ðŸš€ Deploy / aarch64 (concurently)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-nix-cachix
        with:
          cacheName: ${{ needs.prepare.outputs.cacheName }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: ðŸš€ Deploy
        env: 
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          cat << EOF >> deploy.json
          {
            "agents": {
              "rp": "${{ needs.build-aarch64.outputs.build }}",
              "ocr1": "${{ needs.build-aarch64.outputs.build }}"
            }
          }
          EOF
          cachix deploy activate deploy.json

  build-x86_64:
    name: x86_64
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    secrets: inherit
    with:
      outputName: x86_64
      cacheName: ${{ needs.prepare.outputs.cacheName }}

  deploy-x86_64:
    needs: [build-x86_64]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name:  ðŸš€ Deploy / x86_64 (incremental)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-nix-cachix
        with:
          cacheName: ${{ needs.prepare.outputs.cacheName }}
          cachixAuthToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: ðŸš€ Deploy (tiny1)
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          cat << EOF >> deploy.json
          {
            "agents": {
              "tiny1": "${{ needs.build-x86_64.outputs.build }}",
            }
          }
          EOF
          cachix deploy activate deploy.json
      - name: ðŸš€ Deploy (tiny2)
        env:
          CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
        run: |
          rm deploy.json
          cat << EOF >> deploy.json
          {
            "agents": {
              "tiny2": "${{ needs.build-x86_64.outputs.build }}",
            }
          }
          EOF
          cachix deploy activate deploy.json

