name: "Build and Deploy"

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:  # allows manual triggering
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CACHE_NAME: homelab-yohan

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - run: echo "null"
    outputs:
      cacheName: ${{ env.CACHE_NAME }}

  build-rp:
    name: Build rp
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    with:
      hostname: rp
      cacheName: ${{ neeeds.prepare.outputs.cacheName }}
      setup-qemu: true
      extra-nix-config: "extra-platforms = aarch64-linux"

  build-ocr1:
    name: Build ocr1
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    with:
      hostname: ocr1
      cacheName: ${{ neeeds.prepare.outputs.cacheName }}
      setup-qemu: true
      extra-nix-config: "extra-platforms = aarch64-linux"

  build-tiny1:
    name: Build tiny1
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    with:
      hostname: tiny1
      cacheName: ${{ neeeds.prepare.outputs.cacheName }}

  build-tiny2:
    name: Build tiny2
    needs: [prepare]
    uses: ./.github/workflows/build-host-reusable.yml
    with:
      hostname: tiny2
      cacheName: ${{ neeeds.prepare.outputs.cacheName }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-rp, build-ocr1, build-tiny1, build-tiny2]
    if: github.ref == 'refs/heads/main'
    steps:
     - uses: actions/checkout@v4
     - uses: cachix/install-nix-action@v30
     - uses: cachix/cachix-action@v15
       with:
          name: ${{ env.CACHE_NAME }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
     - name: Deploy
       env: 
         CACHIX_ACTIVATE_TOKEN: ${{ secrets.CACHIX_ACTIVATE_TOKEN }}
       run: |
         cat << EOF << deploy.json
         {
           "agents": {
              "rp": "${{ needs.build-rp.outputs.rp }}",
              "tiny1": "${{ needs.build-tiny1.outputs.tiny1 }}",
              "tiny2": "${{ needs.build-tiny2.outputs.tiny2 }}",
              "ocr1": "${{ needs.build-ocr1.outputs.ocr1 }}"
            }
         }
         EOF
         cachix deploy activate deploy.json
