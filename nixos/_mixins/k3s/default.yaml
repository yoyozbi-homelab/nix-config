# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-system
  name:  cloudflared
  labels:
    app:  cloudflared
spec:
  selector:
    matchLabels:
      app: cloudflared
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  cloudflared
    spec:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - image:  alpine #{"$imagescan": "cloudflared-scan"}
        command: ["/bin/sh"]
        args:
          - -c
          - >- 
            apk add --no-cache curl &&
            if [ $(arch) = 'x86_64' ]; then
              export arch="amd64"
            else
              export arch="arm64"
            fi &&
            curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-$arch -o /usr/bin/cloudflared &&
            chmod +x /usr/bin/cloudflared &&
            export TUNNEL_TOKEN="$(cat /etc/cloudflared-token)" &&
            cloudflared tunnel --no-autoupdate run 
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /etc/cloudflared-token
            name: cloudflared-token
            readOnly: true

        name:  cloudflared
      restartPolicy: Always
      volumes:
        - name: cloudflared-token
          hostPath:
            path: /etc/cloudflared-token
            type: File
---
apiVersion: v1
kind: Namespace
metadata:
  name: cattle-system
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: rancher
spec:
  repo: https://releases.rancher.com/server-charts/latest
  targetNamespace: cattle-system
  chart: rancher
  valuesContent: |-
    hostname: rancher.yohanzbinden.ch
    replicas: 1;
    tls: external
    letsEncrypt.ingress.class: traefik
    ingress.enabled: true

